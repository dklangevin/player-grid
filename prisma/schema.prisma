generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}


model Team {
  id Int @id @default(autoincrement())
  teamId Int // teams's id from the API

  name String

  teamPlayers TeamPlayers[]

  @@map("teams")
  @@unique([teamId])
}

model Player {
  id Int @id @default(autoincrement())
  playerId Int? // player's id from the API
  
  firstName String
  lastName String

  slug String
  position String?
  
  points Int?
  assists Int?
  rebounds Int?

  @@map("players")
}

model TeamPlayers {
  id Int @id @default(autoincrement())
  playerId Int // player's id from the API

  firstName String
  lastName String

  team Team @relation(fields: [teamId], references: [teamId], onDelete: Cascade)
  teamId Int

  slug String
  position String?
  
  points Int?
  assists Int?
  rebounds Int?

  @@map("teamPlayers")
}